when HTTP_REQUEST {
  # Basic HTTP command
  set uri [HTTP::uri]

  # Nested HTTP commands
  if {[HTTP::header "User-Agent"] contains "Mozilla"} {
    HTTP::header insert X-Browser "Mozilla"
  }

  # Load Balancing commands
  if {[active_members [LB::server pool]] < 2} {
    log local0. "Warning: Less than 2 active members in pool"
  }

  # SSL commands
  if {[SSL::cipher name] starts_with "TLS"} {
    SSL::forward
  }

  # Complex nested conditions
  switch -glob [string tolower [HTTP::uri]] {
    "/login*" {
      if {[HTTP::header exists "Authorization"]} {
        set auth_header [HTTP::header "Authorization"]
        if {$auth_header starts_with "Bearer"} {
          set token [lindex [split $auth_header] 1]
          # Do something with the token
        }
      }
    }
    "/api*" {
      if {![HTTP::header exists "API-Key"]} {
        HTTP::respond 403 content "API Key required"
      }
    }
    default {
      # Do nothing
    }
  }
}
